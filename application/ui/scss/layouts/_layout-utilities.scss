////////////////////////////
//                        //
//   function variables   //
//                        //
////////////////////////////
$directions: top right bottom left;

////////////////////////
//                    //
//      Margins       //
//                    //
////////////////////////

// Margin Function
// Outputs .l--m-x {margin:1px through margin:10px}
$all-margins: 10;

@for $i from 1 through $all-margins {
  $value: ((10 / $all-margins) * $i) * 1;

  .l--m-#{$i} {
    margin: rem-calc($value) !important;
  }

}

// Single Side Margin Function
// Outputs .l--m-top-x {margin-top:1px through margin-top:20px}
// Outputs .l--m-right-x {margin-right:1px through margin-right:20px}
// Outputs .l--m-bottom-x {margin-bottom:1px through margin-bottom:20px}
// Outputs .l--m-left-x {margin-left:1px through margin-left:20px}
@each $direction in $directions {
  $margin: 20;

  @for $i from 1 through $margin {
    $value: ((20 / $margin) * $i) * 1;

    .l--m-#{$direction}-#{$i} {
      margin-#{$direction} : rem-calc($value) !important;
    }

  }

}

////////////////////////
//                    //
//      Padding       //
//                    //
////////////////////////

// Padding Function
// Outputs .l--p-x {padding:2px & even #s through padding:10px}
$padding: 5;

@for $i from 1 through $padding {
  $value: ((10 / $padding) * $i);

  .l--p-#{$i * 2} {
    padding: rem-calc($value) !important;
  }

}

// Single Side Padding Function
// Outputs .l--p-top-x {padding-top:2px & even #s through padding-top:20px}
// Outputs .l--p-right-x {padding-right:2px & even #s through padding-right:20px}
// Outputs .l--p-bottom-x {padding-bottom:2px & even #s through padding-bottom:20px}
// Outputs .l--p-left-x {padding-left:2px & even #s through padding-left:20px}
@each $direction in $directions {

  $padding: 10;

  @for $i from 1 through $padding {
    $value: ((10 / $padding) * $i * 2);

    .l--p-#{$direction}-#{$i * 2} {
      padding-#{$direction} : rem-calc($value) !important;
    }

  }

}
